println project.group + ":" + rootProject.name + ":" + project.version

defaultTasks 'clean', 'build'

buildscript {
    ext {
        projectName = rootProject.name
        projectVersion = project.version
        buildNumber = System.getenv("BUILD_NUMBER") ?: "local"
        buildUrl = System.getenv("BUILD_URL") ?: "http://local-build"
        timestamp = new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        buildDir = relativePath("./build")
        jobName = System.getenv("JOB_NAME") ?: name
    }

    repositories {
        mavenLocal()
        jcenter()
        maven { url 'http://repo.spring.io/plugins-release' }
        maven { url 'http://repo.spring.io/milestone' }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath group: 'org.sonarsource.scanner.gradle', name: 'sonarqube-gradle-plugin', version: '1.2'
        classpath group: 'net.ltgt.gradle', name: 'gradle-apt-plugin', version: '0.6'
        classpath group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: spring_boot_version
        classpath group: 'org.springframework.build.gradle', name: 'propdeps-plugin', version: '0.0.7'
//        classpath group: 'se.transmode.gradle', name: 'gradle-docker', version: '1.2'
        //jhipster-needle-gradle-buildscript-dependency - JHipster will add additional gradle build script plugins here
    }
}


apply plugin: 'idea'

apply plugin: 'maven'
apply plugin: 'spring-boot'
apply plugin: 'propdeps'

bootRepackage {
    mainClass = 'com.api.foobar.Application'
}

springBoot {
    mainClass = 'com.api.foobar.Application'
    executable = true
}

bootRun {
    addResources = false
}

test {
    include '**/*UnitTest*'
    include '**/*IntTest*'

    ignoreFailures true
    reports.html.enabled = false
}

task cucumberTest(type: Test) {
    include '**/CucumberTest*'

    ignoreFailures true
    reports.html.enabled = false
}

test.finalizedBy(cucumberTest)

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/tests")
    reportOn test
    reportOn cucumberTest
}

cucumberTest.finalizedBy(testReport)

apply from: file('gradle/sonar.gradle')
apply from: file('gradle/java.gradle')
apply from: file('gradle/mapstruct.gradle')
//apply from: file('gradle/docker.gradle')
apply from: file('gradle/check-style.gradle')
//jhipster-needle-gradle-apply-from - JHipster will add additional gradle scripts to be applied here

//if (project.hasProperty('prod')) {
//    apply from: 'gradle/profile_prod.gradle'
//} else {
//    apply from: 'gradle/profile_dev.gradle'
//}

configurations {
    all*.exclude group: "org.mockito", module: "mockito-all"
    providedRuntime
}

repositories {
    maven { url 'http://repo.spring.io/milestone' }
    maven { url 'http://repo.spring.io/snapshot' }
    maven { url 'https://repository.jboss.org/nexus/content/repositories/releases' }
    maven { url 'https://oss.sonatype.org/content/repositories/releases' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'http://repo.maven.apache.org/maven2' }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-starter-parent:${spring_cloud_version}"
        mavenBom "org.springframework.boot:spring-boot-starter-parent:${spring_boot_version}"
        mavenBom "io.spring.platform:platform-bom:${spring_platform_version}"
    }

    dependencies {

    }
}

dependencies {
    compile group: 'io.dropwizard.metrics', name: 'metrics-core'
    compile group: 'io.dropwizard.metrics', name: 'metrics-jvm'
    compile group: 'io.dropwizard.metrics', name: 'metrics-servlet', version: dropwizard_metrics_version
    compile group: 'io.dropwizard.metrics', name: 'metrics-json'
    compile group: 'io.dropwizard.metrics', name: 'metrics-graphite'
    compile group: 'io.dropwizard.metrics', name: 'metrics-healthchecks', version: dropwizard_metrics_version
    compile(group: 'io.dropwizard.metrics', name: 'metrics-servlets', version: dropwizard_metrics_version) {
        exclude(module: 'metrics-healthchecks')
    }
    compile(group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: logstash_logback_encoder_version) {
        exclude(module: 'ch.qos.logback')
    }
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-json-org', version: jackson_version
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hppc', version: jackson_version
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: jackson_version
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jackson_version
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jackson_version
    compile(group: 'com.ryantenney.metrics', name: 'metrics-spring', version: metrics_spring_version) {
        exclude(module: 'metrics-core')
        exclude(module: 'metrics-healthchecks')
    }
    compile(group: 'com.zaxxer', name: 'HikariCP', version: HikariCP_version) {
        exclude(module: 'tools')
    }
    compile group: 'commons-lang', name: 'commons-lang', version: commons_lang_version
    compile group: 'commons-io', name: 'commons-io', version: commons_io_version
    compile group: 'javax.inject', name: 'javax.inject', version: javax_inject_version
    compile group: 'javax.transaction', name: 'javax.transaction-api'
    compile group: 'org.apache.geronimo.javamail', name: 'geronimo-javamail_1.4_mail', version: geronimo_javamail_1_4_mail_version

    compile group: 'org.springframework.boot', name: 'spring-boot-actuator'
    compile group: 'org.springframework.boot', name: 'spring-boot-loader-tools'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-logging'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-web')
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-hystrix'
    compile group: 'org.springframework.retry', name: 'spring-retry'
    compile(group: 'org.springframework', name: 'spring-context-support') {
        exclude(module: 'quartz')
    }
    compile group: 'org.springframework.security', name: 'spring-security-config', version: spring_security_version
    compile group: 'org.springframework.security', name: 'spring-security-data', version: spring_security_version
    compile group: 'org.springframework.security', name: 'spring-security-web', version: spring_security_version
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: jjwt_version

    compile(group: 'io.springfox', name: 'springfox-swagger2', version: springfox_version) {
        exclude module: 'mapstruct'
    }
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: springfox_version

    compile group: 'com.h2database', name: 'h2'
    compile group: 'joda-time', name: 'joda-time'
    compile group: 'org.mapstruct', name: 'mapstruct-jdk8', version: mapstruct_version
    testCompile group: 'com.jayway.awaitility', name: 'awaitility', version: awaility_version
    testCompile group: 'com.jayway.jsonpath', name: 'json-path'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testCompile group: 'junit', name: 'junit'
    testCompile group: 'org.mockito', name: 'mockito-core'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library'
    testCompile group: 'org.hamcrest', name: 'hamcrest-core'

    testCompile group: 'org.assertj', name: 'assertj-core', version: assertj_core_version
    testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: powermock_version
    testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: powermock_version
    optional group: 'org.springframework.boot', name:'spring-boot-configuration-processor'
    //jhipster-needle-gradle-dependency - JHipster will add additional dependencies here
}

compileJava.dependsOn(processResources)

clean {
    delete "target"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14'
}

task stage(dependsOn: 'bootRepackage') {
}
